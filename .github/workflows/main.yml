name: "Create Release"
on:
  push:
    branches:
      - master
  workflow_dispatch:
env:
  release_version: "1.0.0-${{ github.sha }}"
jobs:
  create-gh-release:
    name: "Create Release"
    runs-on: ubuntu-latest
    outputs:
      release-url: ${{ steps.create_release.outputs.html_url}}
      release-number: ${{ steps.release-number.outputs.release-number}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - name: generate release number
        id: release-number
        uses: mindbox-moscow/gha-release-number@v1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Create GitHub Release"
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release-number.outputs.release-number }}
          release_name: Release ${{ steps.release-number.outputs.release-number }}
          draft: false
          prerelease: false
  create-octopus-release:
    name: "Create Octopus Release"
    runs-on: ubuntu-latest
    needs:
      - create-gh-release
    strategy:
      matrix:
        octopus-project:
          - "project1"
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - name: Generate Octopus Deploy build information
        uses: xo-energy/action-octopus-build-information@v1.0.0
        with:
          octopus_api_key: ${{ secrets.OCTOPUS_API_KEY }}
          octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }}
          octopus_project: ${{ matrix.octopus-project }}
          output_path: octopus
      - name: "Create buildinfo ${{ matrix.octopus-project }}"
        uses: docker://octopusdeploy/octo
        with:
          args: >
            build-information --server="${{ secrets.OCTOPUS_SERVER_URL }}" --apiKey="${{ secrets.OCTOPUS_API_KEY }}" --package-id="${{ matrix.octopus-project }}" --file="octopus/buildInformation.json" --version="${{ needs.create-gh-release.outputs.release-number }}" --overwrite-mode=OverwriteExisting --space="Spaces-1"
      - name: "Create ${{ matrix.octopus-project }} Octopus Release"
        uses: docker://octopusdeploy/octo
        with:
          args: >
            create-release    --server="${{ secrets.OCTOPUS_SERVER_URL }}" --apiKey="${{ secrets.OCTOPUS_API_KEY }}" --project="${{ matrix.octopus-project }}" --packageVersion="${{ needs.create-gh-release.outputs.release-number }}"  --releaseNumber="${{ needs.create-gh-release.outputs.release-number }}" --space="Spaces-1"
