name: "Create Release"
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  create-gh-release:
    name: "Create Release"
    runs-on: ubuntu-latest
    outputs:
      release-url: ${{ steps.create_release.outputs.html_url}}
      release-number: ${{ steps.release-number.outputs.release-number}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - name: "Create GitHub Release"
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}a
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  create-octopus-release:
    name: "Create Octopus Release"
    runs-on: ubuntu-latest
    needs:
      - create-gh-release
    strategy:
      matrix:
        octopus-project:
          - "Project1"
          - "Project2"
          - "Project3"
    steps:
      - name: Octopus Deploy
        uses: docker://octopusdeploy/octo
        env:
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      - run: |
          commitMessage=$(git log -1 --pretty=oneline)
          commitMessage=$($commitMessage -replace "${env:GITHUB_SHA} ", "")
          jsonBody = {
            BuildEnvironment = "GitHub Actions"
            Branch = "${env:BRANCH_NAME}"
            BuildNumber = "${env:GITHUB_RUN_NUMBER}"
            BuildUrl = "https://github.com/${env:GITHUB_REPOSITORY}/actions/runs/${env:GITHUB_RUN_ID}"
            VcsCommitNumber = "${env:GITHUB_SHA}"
            VcsType = "Git"
            VcsRoot = "https://github.com/${env:GITHUB_REPOSITORY}.git"
            Commits = (
              {
                Id = "${env:GITHUB_SHA}"
                LinkUrl = "https://github.com/${env:GITHUB_REPOSITORY}/commit/${env:GITHUB_SHA}"
                Comment = $commitMessage
              }
            )
          } | ConvertTo-Json -Depth 10
          echo $jsonBody > buildinformation.json
          octo build-information --package-id="${env:PACKAGE_NAME}" --file="buildinformation.json" --version="${env:PACKAGE_VERSION}" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}" --space="${env:OCTOPUS_SPACE_NAME}"
          octo create-release --project="${env:OCTOPUS_PROJECT_NAME}" --packageVersion="${env:PACKAGE_VERSION}" --releaseNumber="${env:PACKAGE_VERSION}" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}" --space="${env:OCTOPUS_SPACE_NAME}" --deployTo="${env:ENVIRONMENT_NAME}" --channel="${env:CHANNEL_NAME}" --variable="Feature Branch Name:${env:BRANCH_NAME}" --variable="Merged Branch Name:${env:MERGED_BRANCH}"
