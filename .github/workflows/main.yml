name: "Create Release"
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  create-octopus-release:
    name: "Create Octopus Release"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        octopus-project:
          - "Project1"
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - run: env && echo ${{ github.event.commits[0].message }} && echo ${{ github.event.commits.message }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Octopus Deploy
        uses: docker://octopusdeploy/octo
        env:
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_SPACE_NAME: "Spaces-1"
      - run: |
          git log -1 --pretty=oneline
          commitMessage=$(echo $(git log -n 10 --pretty=format:'{%n  "Id": "%h",%n   "Comment": "%f"%n},' $@ | perl -pe 'BEGIN{print "["}; END{print "]\n"}' |  perl -pe 's/},]/}]/'))
          echo $commitMessage
          jsonBody=$(jq -nr --arg v "${commitMessage}" '{
                    "BuildEnvironment":"BitBucket",
                    "Branch":"main",
                    "BuildNumber":"288",
                    "BuildUrl":"https://bitbucket.org/octopussamples/petclinic/addon/pipelines/home#!/results/288",
                    "VcsType":"Git",
                    "VcsRoot":"http://bitbucket.org/octopussamples/petclinic",
                    "VcsCommitNumber":"314cf2c3ee916c92a384c2796a6abe332d678e4f",
                    "Commits": $v
                    }')
          echo ${jsonBody} > tmp.json
          clear=$(cat tmp.json | sed 's/\\"/\"/g')
          tt=${clear/\"[{/\[{}
          ttt=${tt/\}\]\"/\}\]}
          echo $ttt | jq .
          echo $ttt > buildinfo.json
      - name: "Create buildinfo ${{ matrix.octopus-project }}"
        uses: docker://octopusdeploy/octo
        with:
          args: >
            build-information --package-id="project1" --file="buildinfo.json" --version="1.0.200802.1004" --server=${{ secrets.OCTOPUS_SERVER_URL }} --apiKey=${{ secrets.OCTOPUS_API_KEY }} --space="Spaces-1"  --overwrite-mode=OverwriteExisting
      - name: "Create ${{ matrix.octopus-project }} Octopus Release"
        uses: docker://octopusdeploy/octo
        with:
          args: >
            create-release --project="project1" --packageVersion="1.0.200802.1004"  --releaseNumber="v0.1.4" --server=${{ secrets.OCTOPUS_SERVER_URL }} --apiKey=${{ secrets.OCTOPUS_API_KEY }} --space="Spaces-1"